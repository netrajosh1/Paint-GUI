import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.Random;
public class Paint extends JComponent implements Runnable {
    //Canvas
        Image image; // the canvas
        Graphics2D graphics2D;  // this will enable drawing
        int curX; // current mouse x coordinate
        int curY; // current mouse y coordinate
        int oldX; // previous mouse x coordinate
        int oldY; // previous mouse y coordinate
        Paint paint; // variable of the type SimplePaint

        //JButton enterButton; // button to enter information
        JButton clearButton;
        JButton fillButton;
        JButton eraseButton;
        JButton randomButton;
        JTextField strTextField; // text field for input

        /* Bottom Panel has Hex TextField, Hex Button, R TextField, G TextField, B TextField, RGB Button */

        public static void main(String[] args) {
            SwingUtilities.invokeLater( new Paint());
        }

        public Paint() {
            addMouseListener(new MouseAdapter() {
                @Override
                public void mousePressed(MouseEvent e) {
                    // set oldX and oldY coordinates to beginning mouse press
                    oldX = e.getX();
                    oldY = e.getY();
                }
            });

            addMouseMotionListener(new MouseMotionAdapter() {
                @Override
                public void mouseDragged(MouseEvent e) {
                    // set current coordinates to where mouse is being dragged
                    curX = e.getX();
                    curY = e.getY();

                    // draw the line between old coordinates and new ones
                    graphics2D.drawLine(oldX, oldY, curX, curY);

                    // refresh frame and reset old coordinates
                    repaint();
                    oldX = curX;
                    oldY = curY;

                }
            });

        }

        public void run() {
            JFrame frame = new JFrame();
            frame.setTitle("Simple Paint Walkthrough");
            Container content = frame.getContentPane();
            content.setLayout(new BorderLayout());
            paint = new Paint();
            content.add(paint, BorderLayout.CENTER);
            frame.setSize(600, 400);
            frame.setLocationRelativeTo(null);
            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            frame.setVisible(true);

            strTextField = new JTextField(10);

            clearButton = new JButton("Clear");
            fillButton = new JButton("Fill");
            eraseButton = new JButton("Erase");
            randomButton = new JButton("Random");


            JPanel panel = new JPanel();
            panel.add(strTextField);
            panel.add(clearButton);
            panel.add(fillButton);
            panel.add(eraseButton);
            panel.add(randomButton);
            content.add(panel, BorderLayout.NORTH);

            clearButton.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    if (graphics2D != null) {
                        graphics2D.clearRect(0, 0, getWidth(), getHeight());
                        graphics2D.setColor(Color.WHITE);
                        graphics2D.fillRect(0, 0, getWidth(), getHeight());
                        graphics2D.setColor(Color.BLACK);
                        repaint();
                    }
                }
            });

            fillButton.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    graphics2D.setPaint(Color.BLACK);
                    graphics2D.fillRect(0, 0, getWidth(), getHeight());
                    repaint();
                }
            });
            eraseButton.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    int size = 5;
                    paint.draw(size);
                }
            });
            randomButton.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    Random random = new Random();
                    int num = random.nextInt();
                    paint.draw(num);
                }
            });

        }


        protected void paintComponent(Graphics g) {
            if (image == null) {
                image = createImage(getSize().width, getSize().height);

                // this lets us draw on the image (i.e. the canvas)
                graphics2D = (Graphics2D) image.getGraphics();

                // gives us better rendering quality for the drawing lines
                graphics2D.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                        RenderingHints.VALUE_ANTIALIAS_ON);

                // set canvas to white with default paint color
                graphics2D.setPaint(Color.white);
                graphics2D.fillRect(0, 0, getSize().width, getSize().height);
                graphics2D.setPaint(Color.black);
                repaint();
            }
            g.drawImage(image, 0, 0, null);
        }

        public void draw(int size) {
            graphics2D.setStroke(new BasicStroke(1));
        }


}
