//
// Source code recreated from a .class file by IntelliJ IDEA
// (powered by FernFlower decompiler)
//

import java.awt.BasicStroke;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.awt.image.ImageObserver;
import java.util.Random;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

public class Paint extends JComponent implements Runnable {
    Image image;
    Graphics2D graphics2D;
    int curX;
    int curY;
    int oldX;
    int oldY;
    JButton clearButton;
    JButton fillButton;
    JButton eraseButton;
    JButton randomButton;
    JButton hexButton;
    JButton rgbButton;
    JTextField hexText;
    JTextField rText;
    JTextField gText;
    JTextField bText;
    Color currentColor;

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Paint());
    }

    public Paint() {
        this.currentColor = Color.BLACK;
        this.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent e) {
                Paint.this.oldX = e.getX();
                Paint.this.oldY = e.getY();
            }
        });
        this.addMouseMotionListener(new MouseMotionAdapter() {
            public void mouseDragged(MouseEvent e) {
                Paint.this.curX = e.getX();
                Paint.this.curY = e.getY();
                if (Paint.this.graphics2D != null) {
                    Paint.this.graphics2D.drawLine(Paint.this.oldX, Paint.this.oldY, Paint.this.curX, Paint.this.curY);
                    Paint.this.repaint();
                    Paint.this.oldX = Paint.this.curX;
                    Paint.this.oldY = Paint.this.curY;
                }

            }
        });
    }

    public void run() {
        JFrame frame = new JFrame();
        frame.setTitle("Simple Paint Walkthrough");
        Container content = frame.getContentPane();
        content.setLayout(new BorderLayout());
        this.clearButton = new JButton("Clear");
        this.fillButton = new JButton("Fill");
        this.eraseButton = new JButton("Erase");
        this.randomButton = new JButton("Random");
        this.hexButton = new JButton("Hex");
        this.rgbButton = new JButton("RGB");
        this.hexText = new JTextField("#", 10);
        this.rText = new JTextField("", 5);
        this.gText = new JTextField("", 5);
        this.bText = new JTextField("", 5);
        JPanel panel = new JPanel();
        panel.add(this.clearButton);
        panel.add(this.fillButton);
        panel.add(this.eraseButton);
        panel.add(this.randomButton);
        panel.add(this.hexButton);
        panel.add(this.rgbButton);
        content.add(panel, "North");
        content.add(this, "Center");
        JPanel bottomPanel = new JPanel();
        bottomPanel.add(this.hexText);
        bottomPanel.add(this.rText);
        bottomPanel.add(this.gText);
        bottomPanel.add(this.bText);
        content.add(bottomPanel, "South");
        frame.setSize(600, 400);
        frame.setLocationRelativeTo((Component)null);
        frame.setDefaultCloseOperation(2);
        frame.setVisible(true);
        this.fillButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if (Paint.this.graphics2D != null) {
                    Paint.this.graphics2D.setPaint(Paint.this.currentColor);
                    Paint.this.graphics2D.fillRect(0, 0, Paint.this.getWidth(), Paint.this.getHeight());
                    Paint.this.repaint();
                    Paint.this.hexText.setText("#");
                    Paint.this.rText.setText("");
                    Paint.this.gText.setText("");
                    Paint.this.bText.setText("");
                }

            }
        });
        this.clearButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if (Paint.this.graphics2D != null) {
                    Paint.this.graphics2D.clearRect(0, 0, Paint.this.getWidth(), Paint.this.getHeight());
                    Paint.this.graphics2D.setColor(Color.WHITE);
                    Paint.this.graphics2D.fillRect(0, 0, Paint.this.getWidth(), Paint.this.getHeight());
                    Paint.this.graphics2D.setColor(Paint.this.currentColor);
                    Paint.this.repaint();
                    Paint.this.hexText.setText("#");
                    Paint.this.rText.setText("");
                    Paint.this.gText.setText("");
                    Paint.this.bText.setText("");
                }

            }
        });
        this.eraseButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                int size = 5;
                Paint.this.draw(size);
            }
        });
        this.eraseButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                int size = 5;
                Paint.this.draw(size);
            }
        });
        this.randomButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                Random random = new Random();
                Color randomColor = new Color(random.nextInt(256), random.nextInt(256), random.nextInt(256));
                Paint.this.currentColor = randomColor;
                Paint.this.repaint();
            }
        });
        this.hexButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                try {
                    String hexValue = Paint.this.hexText.getText();
                    Color decodedColor = Color.decode(hexValue);
                    Paint.this.graphics2D.setColor(decodedColor);
                    Paint.this.rText.setText(String.valueOf(decodedColor.getRed()));
                    Paint.this.gText.setText(String.valueOf(decodedColor.getGreen()));
                    Paint.this.bText.setText(String.valueOf(decodedColor.getBlue()));
                    Paint.this.repaint();
                } catch (NumberFormatException var4) {
                    JOptionPane.showMessageDialog(Paint.this, "This is not a valid Hex value", "Error!", 0);
                }

            }
        });
        this.rgbButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                try {
                    String rTextValue = Paint.this.rText.getText();
                    int r = 0;
                    if (!rTextValue.isEmpty()) {
                        r = Integer.parseInt(rTextValue);
                    }

                    String gTextValue = Paint.this.rText.getText();
                    int g = 0;
                    if (!rTextValue.isEmpty()) {
                        g = Integer.parseInt(gTextValue);
                    }

                    String bTextValue = Paint.this.rText.getText();
                    int b = 0;
                    if (!rTextValue.isEmpty()) {
                        b = Integer.parseInt(bTextValue);
                    }

                    Color newColor = new Color(r, g, b);
                    Paint.this.graphics2D.setColor(newColor);
                    Paint.this.hexText.setText(String.format("#%02x%02x%02x", r, g, b));
                    Paint.this.repaint();
                } catch (NumberFormatException var9) {
                    JOptionPane.showMessageDialog(Paint.this, "This is not a valid RGB value", "Error", 0);
                }

            }
        });
    }

    protected void paintComponent(Graphics graphicsObject) {
        if (this.image == null) {
            this.image = this.createImage(this.getSize().width, this.getSize().height);
            this.graphics2D = (Graphics2D)this.image.getGraphics();
            this.graphics2D.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            this.graphics2D.setPaint(Color.WHITE);
            this.graphics2D.fillRect(0, 0, this.getSize().width, this.getSize().height);
            this.graphics2D.setPaint(this.currentColor);
            this.graphics2D.setStroke(new BasicStroke(5.0F));
            this.repaint();
        }

        graphicsObject.drawImage(this.image, 0, 0, (ImageObserver)null);
    }

    public void draw(int size) {
        if (this.graphics2D != null) {
            this.graphics2D.setStroke(new BasicStroke((float)size));
        }

    }
}
